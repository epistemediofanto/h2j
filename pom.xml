
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>it.zaleuco.h2j</groupId>
	<artifactId>H2J</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<java.source.version>1.8</java.source.version>
		<java.target.version>1.8</java.target.version>
		<mvn.source.plugin.version>3.2.1</mvn.source.plugin.version>
		<mvn.compiler.plugin.version>3.8.1</mvn.compiler.plugin.version>
		<mvn.jar.plugin.version>3.2.0</mvn.jar.plugin.version>
		<mvn.war.plugin.version>3.1.0</mvn.war.plugin.version>
		<mvn.surefire.plugin>3.0.0-M5</mvn.surefire.plugin>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>


	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>jakarta.enterprise</groupId>
				<artifactId>jakarta.enterprise.cdi-api</artifactId>
				<version>2.0.2</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>jakarta.servlet</groupId>
				<artifactId>jakarta.servlet-api</artifactId>
				<version>4.0.2</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.6.1</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${mvn.source.plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${mvn.compiler.plugin.version}</version>
					<configuration>
						<source>${java.source.version}</source>
						<target>${java.target.version}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${mvn.jar.plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${mvn.war.plugin.version}</version>
					<configuration>
						<defaultLibBundleDir>lib/</defaultLibBundleDir>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<classpathPrefix>lib/</classpathPrefix>
							</manifest>
						</archive>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${mvn.surefire.plugin}</version>
				</plugin>

				<!-- Release configuration: -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5</version>

					<configuration>
						<!-- Automated passphrase entry: -->

						<!-- To pass your passphrase to the build automatically, so avoiding 
							manual interaction, you'll need to put the passphrase into settings.xml. 
							You don't really want that to be in plain text, so you'll want to follow: 
							http://maven.apache.org/guides/mini/guide-encryption.html -->
						<!-- <arguments>-Dgpg.passphrase=${gpg.passphrase}</arguments> -->

						<!-- Manual passphrase entry: -->

						<!-- This is the simplest secure solution, but requires you to type 
							your key passphrase in manually when performing a release. No biggie unless 
							you want your CI server to decide when to release for you. -->
						<mavenExecutorId>forked-path</mavenExecutorId>

					</configuration>
				</plugin>

				<!-- Deployment -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>1.6.4</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>sonatype-nexus-staging</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>

	</build>

	<modules>
		<module>Web</module>
		<module>H2JServerPage</module>
	</modules>

	<scm>
		<url>https://github.com/epistemediofanto/h2j</url>
		<connection>scm:git:git://github.com/epistemediofanto/h2j.git</connection>
		<developerConnection>scm:git:zaleuco@github.com/epistemediofanto/h2j.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<distributionManagement>

		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus snapshot repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>

		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Sonatype Nexus release repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>

	</distributionManagement>


</project>